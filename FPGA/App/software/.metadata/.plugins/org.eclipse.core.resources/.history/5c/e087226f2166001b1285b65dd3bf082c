#include "stream_transmitter.hpp"
#include "driver/adc2.hpp"
#include "centralized_monitor.hpp"
#include <stream_data.hpp>

static StreamDataStatus_t StreamDataStatus;
static constexpr StreamDataDesciptor<StreamDataStatus_t> StreamDataDesciptorStatus(&StreamDataStatus, StreamIdStatus);

static StreamDataAdc2_t StreamDataAdc2;
static constexpr StreamDataDesciptor<StreamDataAdc2_t> StreamDataDesciptorAdc2(&StreamDataAdc2, StreamIdAdc2);

void StreamTransmitter::TransmitStatus(void){
    __builtin_stwio(&StreamDataStatus.error_flags, CentralizedMonitor::GetErrorFlags());
    __builtin_stwio(&StreamDataStatus.fault_flags, CentralizedMonitor::GetFaultFlags());
    StreamDataDesciptorStatus.TransmitSync(_Device);
}

void StreamTransmitter::TransmitAdc2(void) {
    __builtin_sthio(&StreamDataAdc2.dc48v_voltage, Adc2::GetDc48v());
    __builtin_sthio(&StreamDataAdc2.dribble_current, Adc2::GetDribbleCurrent());
    StreamDataDesciptorAdc2.TransmitSync(_Device);
}

alt_msgdma_dev *StreamTransmitter::_Device;
